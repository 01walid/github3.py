{"recorded_with": "betamax/0.8.0", "http_interactions": [{"response": {"body": {"string": "", "base64_string": "H4sIAAAAAAAAA62YwZLiNhCGX4XyNQzCeFlmXJXazSnJKXvYXHKhhC2wdmzJJckQxjXvnl+SjW1SgZlRLhQY9adfrW65W23E8yhNNvFyE8fzSNCKRWl04KZodsmiPkfzaN+U5bb7Q/NDRY9cNXr1iUxGyZNgKkrbqJQHLsAYDwXFTrP6tHxMlvOIHqmhatuoEuMKY2qdEuIf6uXCYxvNVCaFYcIsMlmRhnjrL8efE+AOqoNYboQHV7CadxxvDJgmV4oKU5VXGvzUzuRq8F6WpTyBcq363kTkYmld6ShcHD5IgWVLpCkYnIclvVpHcG3eL8pZtdhBbbY8txyNHVEsf7ewzg6ybAC8tkSxWjpgs9OZ4rXhUrxf4MQaNKkOVPAX+jEarDUgVtr7pTgrWLMjYvH95t6sJbXiR5qdrWsUyxg/wtkfRF7Zg2jOtc3bPxEU1vXcsC3NK5uHe1pq9jqP3PQGg9yDOdLurdE/zfOcXXYVE347m0KKWcl3iqrzbC/VjCNn1Z5miNXZCefIDOE6+5Wb35rd7Jdvvx9t9mLc80XJzcx1zp8k41SOJd3Zk5sIpCcAkPTMzkEca98SfHb5lCHV6U4qauS9Q+O2wAmoJeOfNpYMo1WQcAcAqJAyzJMOABDXumFvCu3bC3ccTfr8EU2180feW7LmNtoToJVqnPOCsSAPXiAt6U9lpIPIijBsz2iJ/+Z2mx6CpFp7YHal3AVx8KIkDtISXVD/HjLbUHWWahkTqGL7YKmWcYEaFbjfTqaFXJB4CRpsfZDOnkHazqMlFYeGHsKoFwh23b6qD/TlbhFzO3cGCpC2QlN814QfcgPHKvW1A/I9zKUDZoC6guR2mXPHAaPCxrmgqvi9uuA2sUNMwv5/wNo4vUbb3/fLmPtyLaMlw5nsD/2OHuLd7tTvdY7n6NqBoJDoGaT9qaamsCcXpqqpYiGiOwRpdxTF1mKxaAtGXVldMRWYwZ4AFFVZgaoxRGfbM1D1VNS4an1vZeao3ktJ8yDfXiAA+m0M0eoJ4/2v0YgGCXSAMbHiJdNGirAzdqCM2UIavufZWzqW2+k2AbVfNBcZm9OynCNqDc844hi1tt1FFJwszEOegGXgHsB3KiVDSAd5XTHPaInvNHNWl/IcfAqNMDaJFUN3k2+pQVeyWsarh2XyECff46d0/Ziuk78wpqnzyZjNw3L9sPr8fZmkyTqNYzumbnQxwrgh8ZPFLDdpsrRDcKx2cY1vuLjAJy5L/nVpMOpT7FUEDLUuBsOvg1n6H7cqnVlWIkCvMuntcx6v33X3TSG1kBWrUXuM7me8XVKfF3B1jqYul5lecGkXxl8wMt7Ej8mkyshkI7Afn59w53OiBgUx3ufjh311cukk7dRUb33uR6lRjW1V8aRW8gfLjB4/G86b0cATf+ZDk2stbQnVm/l2sZOwWuPGq+JKye4uSuB8wFVDzUSnoBdrF+AbxdQZjYZE6Xh13WJztqdNaba+cMfqcnQcpayxvJJnTGi4q7UtJ/5y1zn4o7th+6P7qev8b7SSUepFuSbZf90j0htc1Qy9vWDmhDa2V+skjkuofr1Pr/8ANAs2/e8TAAA=", "encoding": "utf-8"}, "headers": {"X-RateLimit-Limit": "60", "X-RateLimit-Reset": "1496099157", "Content-Type": "application/json; charset=utf-8", "Cache-Control": "public, max-age=60, s-maxage=60", "Access-Control-Expose-Headers": "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval", "Server": "GitHub.com", "Vary": "Accept", "X-Frame-Options": "deny", "X-Content-Type-Options": "nosniff", "Transfer-Encoding": "chunked", "Content-Security-Policy": "default-src 'none'", "X-GitHub-Request-Id": "9347:29AF:3CF812E:4902374:592C9B4A", "Date": "Mon, 29 May 2017 22:06:02 GMT", "Access-Control-Allow-Origin": "*", "Content-Encoding": "gzip", "X-RateLimit-Remaining": "33", "ETag": "W/\"8319bddb7cbb1ce186de96d12d27398d\"", "X-GitHub-Media-Type": "github.drax-preview; format=json", "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload", "Last-Modified": "Fri, 26 May 2017 03:35:11 GMT", "Status": "200 OK", "X-XSS-Protection": "1; mode=block"}, "url": "https://api.github.com/repos/sigmavirus24/github3.py", "status": {"code": 200, "message": "OK"}}, "recorded_at": "2017-05-29T22:06:02", "request": {"uri": "https://api.github.com/repos/sigmavirus24/github3.py", "body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"Connection": "keep-alive", "Accept-Charset": "utf-8", "Content-Type": "application/json", "User-Agent": "github3.py/1.0.0a4", "Accept": "application/vnd.github.drax-preview+json", "Accept-Encoding": "gzip, deflate"}}}, {"response": {"body": {"string": "", "base64_string": "", "encoding": "utf-8"}, "headers": {"X-RateLimit-Limit": "60", "X-RateLimit-Reset": "1496099157", "Content-Type": "application/json; charset=utf-8", "Cache-Control": "public, max-age=60, s-maxage=60", "Access-Control-Expose-Headers": "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval", "Server": "GitHub.com", "Vary": "Accept", "X-Frame-Options": "deny", "X-Content-Type-Options": "nosniff", "Transfer-Encoding": "chunked", "Content-Security-Policy": "default-src 'none'", "X-GitHub-Request-Id": "9347:29AF:3CF8145:4902387:592C9B4A", "Date": "Mon, 29 May 2017 22:06:02 GMT", "X-Served-By": "cee4c0729c8e9147e7abcb45b9d69689", "Access-Control-Allow-Origin": "*", "Content-Encoding": "gzip", "X-RateLimit-Remaining": "32", "ETag": "W/\"eb2fa403342699323f69a9b60d8c48cd\"", "X-GitHub-Media-Type": "github.v3; param=full; format=json", "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload", "Last-Modified": "Thu, 28 Jan 2016 21:07:06 GMT", "Status": "200 OK", "X-XSS-Protection": "1; mode=block"}, "url": "https://api.github.com/repos/sigmavirus24/github3.py/commits/51cfbf8cbf98b0ba5006b3490f553bc05d4461e4", "status": {"code": 200, "message": "OK"}}, "recorded_at": "2017-05-29T22:06:02", "request": {"uri": "https://api.github.com/repos/sigmavirus24/github3.py/commits/51cfbf8cbf98b0ba5006b3490f553bc05d4461e4", "body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"Connection": "keep-alive", "Accept-Charset": "utf-8", "Content-Type": "application/json", "User-Agent": "github3.py/1.0.0a4", "Accept": "application/vnd.github.v3.full+json", "Accept-Encoding": "gzip, deflate"}}}, {"response": {"body": {"string": "diff --git a/github3/repos/contents.py b/github3/repos/contents.py\nindex c8f7e75b..e143d347 100644\n--- a/github3/repos/contents.py\n+++ b/github3/repos/contents.py\n@@ -156,10 +156,10 @@ def update(self, message, content, branch=None, committer=None,\n                     'author': validate_commmitter(author)}\n             self._remove_none(data)\n             json = self._json(self._put(self._api, data=dumps(data)), 200)\n-            if 'content' in json:\n+            if json and 'content' in json:\n                 self._update_attributes(json['content'])\n                 json['content'] = self\n-            if 'commit' in json:\n+            if json and 'commit' in json:\n                 json['commit'] = Commit(json['commit'], self)\n         return json\n \ndiff --git a/tests/cassettes/Contents_update.json b/tests/cassettes/Contents_update.json\nnew file mode 100644\nindex 00000000..d5b22a68\n--- /dev/null\n+++ b/tests/cassettes/Contents_update.json\n@@ -0,0 +1 @@\n+{\"http_interactions\": [{\"request\": {\"body\": {\"string\": \"\", \"encoding\": \"utf-8\"}, \"headers\": {\"Accept-Encoding\": \"gzip, deflate\", \"Accept\": \"application/vnd.github.v3.full+json\", \"User-Agent\": \"github3.py/1.0.0a2\", \"Accept-Charset\": \"utf-8\", \"Connection\": \"keep-alive\", \"Content-Type\": \"application/json\", \"Authorization\": \"token <AUTH_TOKEN>\"}, \"method\": \"GET\", \"uri\": \"https://api.github.com/repos/github3py/delete_contents\"}, \"response\": {\"body\": {\"string\": \"\", \"base64_string\": \"H4sIAAAAAAAAA+2Y326jOhDGXyXi9mTjJN1Nu0hHe95gb3q1N5EBB6wajGyTKkV99/PZ5l+yVUnqXlaqKgKenz/GHjMzbcSzKP6x/v6w296tl1FFSxbFUcYEM2yfysqwyuhoGR0aIfbd05yboknu6hP5e5x8rpiK4jYSMucVUMNgQOxcm/uH7ebHbhnRIzVU7RslMKowptYxIf6mXnmrRjPVaVilsiQN6ax/Hf+9Ay9XHcSCI9y4gNW8A3lr0DSZ6ilMKS4E+Mdu/HTkQQohn2F/qffdKchgZj3oELzKP4KAWUukKRgchtd4tS/PtblRjjNp8WLa7HlmIRpLoFh2m6TOCILsYr+2RLFaOlqT6FTx2nBZ3SjtzBQoqXJa8Rf6ARRM7Y61om4U4Uxgyo5219/mFG/TklrxI01P1h2KpYwf4d2P8C6MgTOn2sbm74lnrM85ApVmpQ22AxWavS4jp8FgsLuxRHRdtc/fCOeMDQuKqR8Lrhf4M6yspaKKi9MC2zFbJKdFFy2r+rQ4SLXgODkQnnb5MFwbbGCIxZOnQdW7weqWYgzBN6RZ1swazUAQnkBA1hM7BZIsoSX438VVimCnCXxk5NyZMSfyDNWS6U+7yQyjZaB4hwCqkDLUow4BFNe6YVft+7nXdyRN+vCqmjLx5981QTUH9wzopVrzvGIs0JMDpiX9MZ0oWqVFKLintMRfuZWneaBcSwAoETIJJCH6icO0RBfUf57MPlyh5VrKGVaxwyfItZQBa1Tw2jupFjNA8Z002AaBWnsKaTvPClrlDc1DuQMGO8B+0XP6MpvfzMXTyAHUZm6KJ81nHIEjyar1aQbOgVDXjqAR67KX97/9s26Y5EHOEWXJ5/KJOWYHOQuETwHbfXsJt7/nU6BrJFtKS8ZT238YOn6Yl7svQ691OktfuIRN0FNI+09NTWFPNUxWU8VCuQ5C2oQiXVutVm3BqEvHS6aC49ozAKMqLZB+hmltewpypZIal+wfrNQMyb+QNAsMwQEDpF/QML2eMd0LNSrXQJEOMWWWXCCnlVXoGTxypvRKGn7g6TW1z1wInqHaX5pXKVtSIZbYgIanHPsambldT6SrLNRPnoFXQRfBF0CCYYsHel+hGWEpLfE1a8ZqIU+fcD5NQDa0FUPNlO2pQaWzXW9239abb9v7x/Uu3uzi77s/GNPU2eyYutHFX5iHx/V9vP0Z3zkMjtxul+MKXQ9fO503HS4rHtvJgKnWxWj632gY+8s3mjKdYSqwXS9i65Z5j5ffxGuMIbiQJauRrURxhSiy9eoLrtFqmuQcqWwqeB03n6lBsozv+nirz1N6QEH13kd5FBvV2PIWd8ZzZHLzmT/x6SCrQw/1py8gx4lKrpTsGlJeq6xZ1c01EeSrRqt28vxMvfuRsQNthNn7hB17qqTaoDeG8pypEm+ANANi2qgr3v272N3TS7bHjr9GTT9tiHz117r+41d/beycvt+J/OqvnXd/kcacNecQltf31ypmntE6mpwJ05KkO1E2r/8DMfbCQV0XAAA=\", \"encoding\": \"utf-8\"}, \"headers\": {\"vary\": \"Accept, Authorization, Cookie, X-GitHub-OTP\", \"x-github-media-type\": \"github.v3; param=full; format=json\", \"x-oauth-scopes\": \"admin:public_key, gist, repo, user\", \"x-xss-protection\": \"1; mode=block\", \"x-content-type-options\": \"nosniff\", \"x-accepted-oauth-scopes\": \"repo\", \"etag\": \"W/\\\"2b7352621b54ddc5cc69e260ad86b555\\\"\", \"cache-control\": \"private, max-age=60, s-maxage=60\", \"status\": \"200 OK\", \"x-ratelimit-remaining\": \"4978\", \"x-served-by\": \"cee4c0729c8e9147e7abcb45b9d69689\", \"access-control-expose-headers\": \"ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval\", \"transfer-encoding\": \"chunked\", \"x-github-request-id\": \"97E45D32:14F48:218827:56A9C3BB\", \"access-control-allow-credentials\": \"true\", \"last-modified\": \"Wed, 27 Jan 2016 06:16:46 GMT\", \"date\": \"Thu, 28 Jan 2016 07:31:07 GMT\", \"access-control-allow-origin\": \"*\", \"content-security-policy\": \"default-src 'none'\", \"content-encoding\": \"gzip\", \"strict-transport-security\": \"max-age=31536000; includeSubdomains; preload\", \"server\": \"GitHub.com\", \"x-ratelimit-limit\": \"5000\", \"x-frame-options\": \"deny\", \"content-type\": \"application/json; charset=utf-8\", \"x-ratelimit-reset\": \"1453967471\"}, \"status\": {\"message\": \"OK\", \"code\": 200}, \"url\": \"https://api.github.com/repos/github3py/delete_contents\"}, \"recorded_at\": \"2016-01-28T07:31:07\"}, {\"request\": {\"body\": {\"string\": \"\", \"encoding\": \"utf-8\"}, \"headers\": {\"Accept-Encoding\": \"gzip, deflate\", \"Accept\": \"application/vnd.github.v3.full+json\", \"User-Agent\": \"github3.py/1.0.0a2\", \"Accept-Charset\": \"utf-8\", \"Connection\": \"keep-alive\", \"Content-Type\": \"application/json\", \"Authorization\": \"token <AUTH_TOKEN>\"}, \"method\": \"GET\", \"uri\": \"https://api.github.com/repos/github3py/delete_contents/readme\"}, \"response\": {\"body\": {\"string\": \"\", \"base64_string\": \"H4sIAAAAAAAAA7WSX2vCMBTFv0ufxVRr1Qoy5uZqHb44UBRB0uT2z0zS0KS4TvzuS6eIk/mgYw8h4UB+99xz784SmIPVs6bDx+fJsM6pVbMk1smFpBJslHbHc0O306LYBohc14mcVtdzutBxIkwj2rYbtNUJXcNQ6afBdps1q8iZ+ZpoLVUPISzTepzqpAjrJOMoB5kpdBAcWSIKDDSsSSY0CK3Q6XHy95BD1OdYachNmURztv5Z4Yx+nRuyLEQHCjpv3fy4wN1o2ABQBVfohrBothUsw/SidI63x6wKBfkxiu/Yrjf2S0+6lNWEo5SBSeyIMUJQDjbL+Qej/ixaNL3C3AUdTV5nfiJJOaiOvZw3tqEzTghnCt4GDdKcbQJ/7K5E4FNJ/aSxeJ8UZLSJl9wrA59VFEH4i43nXhGMpow4UxlyUjzF/f5KGAMgSEZTERsHIVbQbhltzVKxUVZvZylg0f+ti8ntfvhdo60W9KzkH5Zzv/8C4g372q0DAAA=\", \"encoding\": \"utf-8\"}, \"headers\": {\"vary\": \"Accept, Authorization, Cookie, X-GitHub-OTP\", \"x-github-media-type\": \"github.v3; param=full; format=json\", \"x-oauth-scopes\": \"admin:public_key, gist, repo, user\", \"x-xss-protection\": \"1; mode=block\", \"x-content-type-options\": \"nosniff\", \"x-accepted-oauth-scopes\": \"\", \"etag\": \"W/\\\"f96980266c26e5e87d6ff79c2b424621\\\"\", \"cache-control\": \"private, max-age=60, s-maxage=60\", \"status\": \"200 OK\", \"x-ratelimit-remaining\": \"4977\", \"x-served-by\": \"5aeb3f30c9e3ef6ef7bcbcddfd9a68f7\", \"access-control-expose-headers\": \"ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval\", \"transfer-encoding\": \"chunked\", \"x-github-request-id\": \"97E45D32:14F48:21884A:56A9C3BB\", \"access-control-allow-credentials\": \"true\", \"last-modified\": \"Thu, 28 Jan 2016 07:29:36 GMT\", \"date\": \"Thu, 28 Jan 2016 07:31:07 GMT\", \"access-control-allow-origin\": \"*\", \"content-security-policy\": \"default-src 'none'\", \"content-encoding\": \"gzip\", \"strict-transport-security\": \"max-age=31536000; includeSubdomains; preload\", \"server\": \"GitHub.com\", \"x-ratelimit-limit\": \"5000\", \"x-frame-options\": \"deny\", \"content-type\": \"application/json; charset=utf-8\", \"x-ratelimit-reset\": \"1453967471\"}, \"status\": {\"message\": \"OK\", \"code\": 200}, \"url\": \"https://api.github.com/repos/github3py/delete_contents/readme\"}, \"recorded_at\": \"2016-01-28T07:31:07\"}, {\"request\": {\"body\": {\"string\": \"{\\\"content\\\": \\\"SEVMTE8=\\\", \\\"sha\\\": \\\"6795b574da0eef553f348938e73fadfd601d47b5\\\", \\\"message\\\": \\\"Updating README.md\\\"}\", \"encoding\": \"utf-8\"}, \"headers\": {\"Content-Length\": \"107\", \"Accept-Encoding\": \"gzip, deflate\", \"Accept\": \"application/vnd.github.v3.full+json\", \"User-Agent\": \"github3.py/1.0.0a2\", \"Accept-Charset\": \"utf-8\", \"Connection\": \"keep-alive\", \"Content-Type\": \"application/json\", \"Authorization\": \"token <AUTH_TOKEN>\"}, \"method\": \"PUT\", \"uri\": \"https://api.github.com/repos/github3py/delete_contents/contents/README.md\"}, \"response\": {\"body\": {\"string\": \"\", \"base64_string\": \"H4sIAAAAAAAAA7VUy27bMBD8lUBnx6ReJCWgSIo2x1yK9tKiMPhYWkL1gkghSAP9e5ex4zpGA8SPAjoQK2lmZ3a4T5HuOw+dj8qnqJMtRGX05e7j5/u7ZWuiRTRIXx2UXCWxYgpGc60kF0IBHsHqLGaQUKMgjxMuRWJSSmPEcPVvhM0X0TQ2+Gfl/eBKQuRQL9e1rya11H1LRhh6RzaFdHgkBhrwsNq258jusGvvZgT7oZXOw4gslW+b1WuGPfS3cVXTK7JBIfvK8Y8DuCMbRgASwB05wivTP3RNL80B9Sgftl5NDsatFc+2vS3sH5r84xAGbOsG0LFVU3e/XBi8g8b+v8lgi6eDn+RiyMIe5Rk5mOcF3pC2DRLQp+foc5MnOqHUCHyY5dQqI1MoQNlMUEYF47awLEeLz0p8kL7hduQIzlMvwobqGCY5+aof9zbHvfT+6lM1dWvUDq2swxRq71o8e6/Di9t1KIfo4idG+pDHhMbsmsbXifhKeZnGJeXfo53x4Xr/XU4XpvAjYAcvk2VaZSZVuZGgZSYsB81xt3GqtYit4YVWOdeUX2KygdmRdzOiHS04J9fBsG8DOld366vXq3rEPY73+ceLHGGBCp4zlhTAbZ6ntkAFomC4mQ3PbMZZDEJcNKhHcJ4Z1HczzT/n+Q+GPTUB6AYAAA==\", \"encoding\": \"utf-8\"}, \"headers\": {\"vary\": \"Accept, Authorization, Cookie, X-GitHub-OTP\", \"x-github-media-type\": \"github.v3; param=full; format=json\", \"x-oauth-scopes\": \"admin:public_key, gist, repo, user\", \"x-xss-protection\": \"1; mode=block\", \"x-content-type-options\": \"nosniff\", \"x-accepted-oauth-scopes\": \"\", \"etag\": \"W/\\\"b7558c14fd20e3506470ac71d1d932c0\\\"\", \"cache-control\": \"private, max-age=60, s-maxage=60\", \"status\": \"200 OK\", \"x-ratelimit-remaining\": \"4976\", \"x-served-by\": \"8a5c38021a5cd7cef7b8f49a296fee40\", \"access-control-expose-headers\": \"ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval\", \"transfer-encoding\": \"chunked\", \"x-github-request-id\": \"97E45D32:14F48:21885B:56A9C3BB\", \"access-control-allow-credentials\": \"true\", \"date\": \"Thu, 28 Jan 2016 07:31:07 GMT\", \"access-control-allow-origin\": \"*\", \"content-security-policy\": \"default-src 'none'\", \"content-encoding\": \"gzip\", \"strict-transport-security\": \"max-age=31536000; includeSubdomains; preload\", \"server\": \"GitHub.com\", \"x-ratelimit-limit\": \"5000\", \"x-frame-options\": \"deny\", \"content-type\": \"application/json; charset=utf-8\", \"x-ratelimit-reset\": \"1453967471\"}, \"status\": {\"message\": \"OK\", \"code\": 200}, \"url\": \"https://api.github.com/repos/github3py/delete_contents/contents/README.md\"}, \"recorded_at\": \"2016-01-28T07:31:08\"}], \"recorded_with\": \"betamax/0.5.0\"}\n\\ No newline at end of file\ndiff --git a/tests/cassettes/Hook_delete.json b/tests/cassettes/Hook_delete.json\nnew file mode 100644\nindex 00000000..f7ca049c\n--- /dev/null\n+++ b/tests/cassettes/Hook_delete.json\n@@ -0,0 +1 @@\n+{\"http_interactions\": [{\"request\": {\"body\": {\"string\": \"\", \"encoding\": \"utf-8\"}, \"headers\": {\"Accept-Encoding\": \"gzip, deflate\", \"Accept\": \"application/vnd.github.v3.full+json\", \"User-Agent\": \"github3.py/1.0.0a2\", \"Accept-Charset\": \"utf-8\", \"Connection\": \"keep-alive\", \"Content-Type\": \"application/json\", \"Authorization\": \"token <AUTH_TOKEN>\"}, \"method\": \"GET\", \"uri\": \"https://api.github.com/repos/github3py/delete_contents\"}, \"response\": {\"body\": {\"string\": \"\", \"base64_string\": \"H4sIAAAAAAAAA+2Y326rOBDGXyXidnPipD0nrZBWZ99gb3q1N5EDDlgFjGyTKkV99/3G5l9yqpLUvaxUVQQ8P3+MPWZm2kimUfxr/fNxe3e/XkYVL0UUR6kohBW7RFVWVNZEy+jQFMWue5pJmzf7+/rE/hynXiqho7iNCpXJCqhhMCA01+bh8W7za7uM+JFbrneNLjAqt7Y2MWP+pll5q8YI3WlYJapkDeusfx//vgcv0x2EwBFuXMBq2YG8NWiGTfXktiwuBPjHbvx05EEVhXqB/aXeD6dggxl50CFklX0GAbOWKZsLOAyv8UYvL429UY4zafFixu5kShCDJdAivU1SZwRBtNhvLdOiVo7W7E2iZW2lqm6UdmYKlNIZr+Qr/wQKprRjSdSNIpwJTMWRdv1tTvE2Lau1PPLkRO7QIhHyCO9+hndhDJw91RSb/048Qz6XCFSelhRsB14Y8baMnAaLwe7GEtF11T5/J5xTMSwopn7KpVngz4qyVpprWZwW2I7pYn9adNGyqk+Lg9ILiZMD4UnLh+HGYgNDLJ48D6o+DFa3FGMIviONWDNrNANBeAIBWc/iFEgiQsvwv4urBMHO9/CRVXNnxpzIM1TLpj9pk1nBy0DxDgFUrlSoRx0CKGlMI67a93Ov70iG9eFVNeXen3/XBNUc3DOglxsjs0qIQE8OmJb1x/Re8yrJQ8E9pWX+yq08zwLlEgGgfaH2gSREP3OYlpmc+8+T3YUrJC5RzrBaHL5ALlEGrNXBa++kEmaA4jtpsQ0CtfYU1naeLXiVNTwL5Q4Y7AD6omf8dTa/mYunkQMoZW5a7puvOAJHEqn1aQbOgVDXjqAR67KXj7/9s26Y5EHOEWUp5/KJOWYHOQuELwHTvr2E0+/5FOgayURp2Xhq+w9Dxw/zcvdl6LVOZ+kLl7AJegpr/6q5zelUw2Q11yKU6yCs3XOka6vVqs0Fd+l4KXRwXHsGYFwnOdLPMK1tT0GuVHLrkv0DSU2R/BeKp4EhOGCA9AsaptczpnuhRuUaKNIhpsxSFshpVRV6Bo+cKb1SVh5kck3tMxeCZ6j2t5FVIpa8KJbYgFYmEvsamTmtJ9JVEeonz8CroIvgC6BCYIsHel+jGUGUlvmaNRV1oU5fcD5NQBTaWqBmSnfcotK5W2+2P9abH3cPT+ttvNnGP7f/YUxTp7Nj6sbkf2Aen9YP8f0mXj8SBkdut8txha6Hr53Omw6XFQ91MmBqTD6a/jMaxv7ynaZMZ5gU2K4XsXXLvMfLb+I1xhCcq1LUyFaiuEIUUb36iuvNWc6RqKaC19F/euEWyTK+6+OtPk/pATk3Ox/lUWx1Q+Ut7oznyOTmi3yW00Gkwwz1py8gx4lKqbXqGlJeq6pF1c01EeSrRlI7eX6m3v1IxYE3hd35hB17quTGojeG8lzoEm+ANANi2qgr3v270O7pJdOx469R008bIt/9ta7/+N1fGzunH3civ/tr591fpDFnzTmE5fX9tUrYF7SOJmfCtCTpTpTN2/9Zr+3bXRcAAA==\", \"encoding\": \"utf-8\"}, \"headers\": {\"vary\": \"Accept, Authorization, Cookie, X-GitHub-OTP\", \"x-github-media-type\": \"github.v3; param=full; format=json\", \"x-oauth-scopes\": \"admin:public_key, gist, repo, user\", \"x-xss-protection\": \"1; mode=block\", \"x-content-type-options\": \"nosniff\", \"x-accepted-oauth-scopes\": \"repo\", \"etag\": \"W/\\\"f5392cd70006da08fc695a5a5ec0ae66\\\"\", \"cache-control\": \"private, max-age=60, s-maxage=60\", \"status\": \"200 OK\", \"x-ratelimit-remaining\": \"4998\", \"x-served-by\": \"2c18a09f3ac5e4dd1e004af7c5a94769\", \"access-control-expose-headers\": \"ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval\", \"transfer-encoding\": \"chunked\", \"x-github-request-id\": \"97E45D32:14F48:25F4A2:56A9CB17\", \"access-control-allow-credentials\": \"true\", \"last-modified\": \"Wed, 27 Jan 2016 06:16:46 GMT\", \"date\": \"Thu, 28 Jan 2016 08:02:31 GMT\", \"access-control-allow-origin\": \"*\", \"content-security-policy\": \"default-src 'none'\", \"content-encoding\": \"gzip\", \"strict-transport-security\": \"max-age=31536000; includeSubdomains; preload\", \"server\": \"GitHub.com\", \"x-ratelimit-limit\": \"5000\", \"x-frame-options\": \"deny\", \"content-type\": \"application/json; charset=utf-8\", \"x-ratelimit-reset\": \"1453971690\"}, \"status\": {\"message\": \"OK\", \"code\": 200}, \"url\": \"https://api.github.com/repos/github3py/delete_contents\"}, \"recorded_at\": \"2016-01-28T08:02:31\"}, {\"request\": {\"body\": {\"string\": \"\", \"encoding\": \"utf-8\"}, \"headers\": {\"Accept-Encoding\": \"gzip, deflate\", \"Accept\": \"application/vnd.github.v3.full+json\", \"User-Agent\": \"github3.py/1.0.0a2\", \"Accept-Charset\": \"utf-8\", \"Connection\": \"keep-alive\", \"Content-Type\": \"application/json\", \"Authorization\": \"token <AUTH_TOKEN>\"}, \"method\": \"GET\", \"uri\": \"https://api.github.com/repos/github3py/delete_contents/hooks/7096472\"}, \"response\": {\"body\": {\"string\": \"\", \"base64_string\": \"H4sIAAAAAAAAA62QwU7DMAyG38VH1C1ZGRvNK3DgwgmEqqw1bbYuCbEzNk17dxwxJG5cJkWK/Mf5/Ps/Q04TGBiZIxmlbHTzwfGYN/Mu7FXCGEj9CPfxpHqckLHtgmf0TGoMYUdqrZvVcl1DBYzE7e2IqvAEG50fboktPBKu68FczVfg7R4liS/cyIvt2B2k5JSxAjyUbcG8wR28VyDrf7gBzPlPeJJdws8sfjdz59Wx2TbL1bER1DWslk+x8LcUfBntCbucsCUq+WuRREjIUsClgslKkgkpBmkso7rQy11rLY1sOYudX5cV7JHIDgX//FR+59hbxr61BVfrxWqmF7P68UWvzYOc+rX4SvhPz+Ub1JtoIx4CAAA=\", \"encoding\": \"utf-8\"}, \"headers\": {\"vary\": \"Accept, Authorization, Cookie, X-GitHub-OTP\", \"x-github-media-type\": \"github.v3; param=full; format=json\", \"x-oauth-scopes\": \"admin:public_key, gist, repo, user\", \"x-xss-protection\": \"1; mode=block\", \"x-content-type-options\": \"nosniff\", \"x-accepted-oauth-scopes\": \"admin:repo_hook, public_repo, read:repo_hook, repo, write:repo_hook\", \"etag\": \"W/\\\"2ddddf92bbbb624c8f4087732e25da04\\\"\", \"cache-control\": \"private, max-age=60, s-maxage=60\", \"status\": \"200 OK\", \"x-ratelimit-remaining\": \"4997\", \"x-served-by\": \"cee4c0729c8e9147e7abcb45b9d69689\", \"access-control-expose-headers\": \"ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval\", \"transfer-encoding\": \"chunked\", \"x-github-request-id\": \"97E45D32:14F48:25F4CC:56A9CB17\", \"access-control-allow-credentials\": \"true\", \"last-modified\": \"Thu, 28 Jan 2016 07:57:52 GMT\", \"date\": \"Thu, 28 Jan 2016 08:02:31 GMT\", \"access-control-allow-origin\": \"*\", \"content-security-policy\": \"default-src 'none'\", \"content-encoding\": \"gzip\", \"strict-transport-security\": \"max-age=31536000; includeSubdomains; preload\", \"server\": \"GitHub.com\", \"x-ratelimit-limit\": \"5000\", \"x-frame-options\": \"deny\", \"content-type\": \"application/json; charset=utf-8\", \"x-ratelimit-reset\": \"1453971690\"}, \"status\": {\"message\": \"OK\", \"code\": 200}, \"url\": \"https://api.github.com/repos/github3py/delete_contents/hooks/7096472\"}, \"recorded_at\": \"2016-01-28T08:02:31\"}, {\"request\": {\"body\": {\"string\": \"\", \"encoding\": \"utf-8\"}, \"headers\": {\"Content-Length\": \"0\", \"Accept-Encoding\": \"gzip, deflate\", \"Accept\": \"application/vnd.github.v3.full+json\", \"User-Agent\": \"github3.py/1.0.0a2\", \"Accept-Charset\": \"utf-8\", \"Connection\": \"keep-alive\", \"Content-Type\": \"application/json\", \"Authorization\": \"token <AUTH_TOKEN>\"}, \"method\": \"DELETE\", \"uri\": \"https://api.github.com/repos/github3py/delete_contents/hooks/7096472\"}, \"response\": {\"body\": {\"string\": \"\", \"encoding\": null}, \"headers\": {\"status\": \"204 No Content\", \"x-ratelimit-remaining\": \"4996\", \"x-github-media-type\": \"github.v3; param=full; format=json\", \"x-content-type-options\": \"nosniff\", \"content-security-policy\": \"default-src 'none'\", \"access-control-expose-headers\": \"ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval\", \"x-github-request-id\": \"97E45D32:14F48:25F4ED:56A9CB17\", \"strict-transport-security\": \"max-age=31536000; includeSubdomains; preload\", \"vary\": \"Accept-Encoding\", \"server\": \"GitHub.com\", \"x-ratelimit-limit\": \"5000\", \"x-oauth-scopes\": \"admin:public_key, gist, repo, user\", \"x-served-by\": \"318e55760cf7cdb40e61175a4d36cd32\", \"access-control-allow-credentials\": \"true\", \"date\": \"Thu, 28 Jan 2016 08:02:31 GMT\", \"x-frame-options\": \"deny\", \"access-control-allow-origin\": \"*\", \"x-accepted-oauth-scopes\": \"admin:repo_hook, public_repo, repo\", \"x-xss-protection\": \"1; mode=block\", \"x-ratelimit-reset\": \"1453971690\"}, \"status\": {\"message\": \"No Content\", \"code\": 204}, \"url\": \"https://api.github.com/repos/github3py/delete_contents/hooks/7096472\"}, \"recorded_at\": \"2016-01-28T08:02:31\"}], \"recorded_with\": \"betamax/0.5.0\"}\n\\ No newline at end of file\ndiff --git a/tests/integration/test_repos_repo.py b/tests/integration/test_repos_repo.py\nindex 9c423d59..1dcd6f2d 100644\n--- a/tests/integration/test_repos_repo.py\n+++ b/tests/integration/test_repos_repo.py\n@@ -1066,3 +1066,32 @@ def test_delete(self):\n             deleted = content.delete('Deleting readme from repository')\n \n         assert deleted\n+\n+    def test_update(self):\n+        \"\"\"Test the ability to update a file's content from a repository.\"\"\"\n+        self.token_login()\n+        cassette_name = self.cassette_name('update')\n+        with self.recorder.use_cassette(cassette_name):\n+            repository = self.gh.repository('github3py', 'delete_contents')\n+            content = repository.readme()\n+            update = content.update(message='Updating README.md',\n+                                    content=b'HELLO')\n+\n+        assert isinstance(update, dict)\n+        assert isinstance(update['content'], github3.repos.contents.Contents)\n+        assert isinstance(update['commit'], github3.git.Commit)\n+\n+\n+class TestHook(helper.IntegrationHelper):\n+\n+    \"\"\"Integration tests for Hook object.\"\"\"\n+\n+    def test_delete(self):\n+        self.token_login()\n+        cassette_name = self.cassette_name('delete')\n+        with self.recorder.use_cassette(cassette_name):\n+            repository = self.gh.repository('github3py', 'delete_contents')\n+            hook = repository.hook(7096472)\n+            deleted = hook.delete()\n+\n+        assert deleted is True\ndiff --git a/tests/test_repos.py b/tests/test_repos.py\nindex 9d6aef2f..b0f8de48 100644\n--- a/tests/test_repos.py\n+++ b/tests/test_repos.py\n@@ -4,46 +4,6 @@\n from github3 import repos\n from tests.utils import (BaseCase, load, mock)\n \n-class TestContents(BaseCase):\n-    def __init__(self, methodName='runTest'):\n-        super(TestContents, self).__init__(methodName)\n-        self.contents = repos.contents.Contents(load('readme'))\n-        self.api = self.contents._api\n-\n-    def setUp(self):\n-        super(TestContents, self).setUp()\n-        self.contents = repos.contents.Contents(self.contents.as_dict(),\n-                                                self.g)\n-\n-    def test_equality(self):\n-        contents = repos.contents.Contents(load('readme'))\n-        assert self.contents == contents\n-        contents.sha = 'fakesha'\n-        assert self.contents != contents\n-\n-    @pytest.mark.xfail\n-    def test_update(self):\n-        self.response('create_content', 200)\n-        self.put(self.api)\n-        self.conf = {\n-            'data': {\n-                'message': 'foo',\n-                'content': 'Zm9vIGJhciBib2d1cw==',\n-                'sha': self.contents.sha,\n-            }\n-        }\n-\n-        self.assertRaises(github3.GitHubError, self.contents.update,\n-                          None, None)\n-\n-        self.not_called()\n-        self.login()\n-\n-        ret = self.contents.update('foo', b'foo bar bogus')\n-        assert isinstance(ret, github3.git.Commit)\n-        self.mock_assertions()\n-\n-\n class TestHook(BaseCase):\n     def __init__(self, methodName='runTest'):\n         super(TestHook, self).__init__(methodName)\n@@ -55,26 +15,6 @@ def setUp(self):\n         super(TestHook, self).setUp()\n         self.hook = repos.hook.Hook(self.hook.as_dict(), self.g)\n \n-    def test_equality(self):\n-        h = repos.hook.Hook(load('hook'))\n-        assert self.hook == h\n-        h._uniq = 1\n-        assert self.hook != h\n-\n-    def test_repr(self):\n-        assert repr(self.hook) == '<Hook [readthedocs]>'\n-\n-    def test_delete(self):\n-        self.response('', 204)\n-        self.delete(self.api)\n-\n-        self.assertRaises(github3.GitHubError, self.hook.delete)\n-        self.not_called()\n-\n-        self.login()\n-        assert self.hook.delete()\n-        self.mock_assertions()\n-\n     def test_edit(self):\n         self.response('hook', 200)\n         self.patch(self.api)\ndiff --git a/tests/unit/json/hook_example b/tests/unit/json/hook_example\nnew file mode 100644\nindex 00000000..cf4bdbf8\n--- /dev/null\n+++ b/tests/unit/json/hook_example\n@@ -0,0 +1,18 @@\n+{\n+  \"id\": 1,\n+  \"url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/1\",\n+  \"test_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/1/test\",\n+  \"ping_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/1/pings\",\n+  \"name\": \"web\",\n+  \"events\": [\n+    \"push\",\n+    \"pull_request\"\n+  ],\n+  \"active\": true,\n+  \"config\": {\n+    \"url\": \"http://example.com/webhook\",\n+    \"content_type\": \"json\"\n+  },\n+  \"updated_at\": \"2011-09-06T20:39:23Z\",\n+  \"created_at\": \"2011-09-06T17:26:27Z\"\n+}\ndiff --git a/tests/unit/test_repos_repo.py b/tests/unit/test_repos_repo.py\nindex c16d1772..957675c8 100644\n--- a/tests/unit/test_repos_repo.py\n+++ b/tests/unit/test_repos_repo.py\n@@ -6,7 +6,7 @@\n from base64 import b64encode\n from github3 import GitHubError\n from github3.null import NullObject\n-from github3.repos.repo import Repository, Contents\n+from github3.repos.repo import Repository, Contents, Hook\n from github3.models import GitHubCore\n \n from . import helper\n@@ -14,6 +14,9 @@\n contents_url_for = helper.create_url_helper(\n     'https://api.github.com/repos/github3py/github3.py/contents/README.rst'\n )\n+hook_url_for = helper.create_url_helper(\n+    'https://api.github.com/repos/octocat/Hello-World/hooks/1'\n+)\n url_for = helper.create_url_helper(\n     'https://api.github.com/repos/octocat/Hello-World'\n )\n@@ -24,11 +27,15 @@\n get_content_example_data = helper.create_example_data_helper(\n     'content_example'\n )\n+get_hook_example_data = helper.create_example_data_helper(\n+    'hook_example'\n+)\n create_file_contents_example_data = helper.create_example_data_helper(\n     'create_file_contents_example'\n )\n content_example_data = get_content_example_data()\n create_file_contents_example_data = create_file_contents_example_data()\n+hook_example_data = get_hook_example_data()\n repo_example_data = get_repo_example_data()\n \n \n@@ -1569,6 +1576,37 @@ def test_str(self):\n             self.instance.path\n         )\n \n+    def test_update(self):\n+        \"\"\"\n+        Verify the request for updating a file's contents on a repository.\n+        \"\"\"\n+        data = {\n+            'message': 'Updating content files.',\n+            'content': b'Updated content here.'\n+        }\n+\n+        self.instance.update(**data)\n+        data.update({\n+            'content': b64encode(data['content']).decode('utf-8'),\n+            'sha': self.instance.sha\n+        })\n+\n+        self.put_called_with(\n+            contents_url_for(),\n+            data=data\n+        )\n+\n+    def test_update_required_content(self):\n+        \"\"\"\n+        Verify the request for updating a file's contents on a repository.\n+        \"\"\"\n+        data = {\n+            'message': 'Updating content files.',\n+            'content': 1,\n+        }\n+        with pytest.raises(ValueError):\n+            self.instance.update(**data)\n+\n \n class TestContentsRequiresAuth(helper.UnitRequiresAuthenticationHelper):\n \n@@ -1582,3 +1620,42 @@ def test_delete(self):\n         Show that deleting content from a repository requires authentication.\n         \"\"\"\n         self.assert_requires_auth(self.instance.delete)\n+\n+    def test_update(self):\n+        \"\"\"\n+        Show that updating a file's content on a repository requires\n+        authentication.\n+        \"\"\"\n+        self.assert_requires_auth(self.instance.update)\n+\n+\n+class TestHook(helper.UnitHelper):\n+\n+    \"\"\"Test methods on Hook class.\"\"\"\n+\n+    described_class = Hook\n+    example_data = hook_example_data\n+\n+    def test_str(self):\n+        \"\"\"Show that instance string is formatted correctly.\"\"\"\n+        assert str(self.instance) == '<Hook [{0}]>'.format(self.instance.name)\n+\n+    def test_edit(self):\n+        \"\"\"Verify the request for editing a hook.\"\"\"\n+        self.instance.delete()\n+\n+        self.session.delete.assert_called_once_with(\n+            hook_url_for()\n+        )\n+\n+\n+class TestHookRequiresAuth(helper.UnitRequiresAuthenticationHelper):\n+\n+    \"\"\"Test methods on Hook object that require authentication.\"\"\"\n+\n+    def delete(self):\n+        \"\"\"\n+        Show that a user must be authenticated to delete a hook on a\n+        repository.\n+        \"\"\"\n+        self.assert_requires_auth(self.instance.delete)\n", "encoding": "utf-8"}, "headers": {"X-RateLimit-Limit": "60", "X-RateLimit-Reset": "1496099157", "Content-Type": "application/vnd.github.diff; charset=utf-8", "Cache-Control": "public, max-age=60, s-maxage=60", "Access-Control-Expose-Headers": "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval", "Server": "GitHub.com", "Vary": "Accept", "X-Frame-Options": "deny", "X-Content-Type-Options": "nosniff", "Content-Security-Policy": "default-src 'none'", "X-GitHub-Request-Id": "9347:29AF:3CF8174:49023AD:592C9B4A", "Date": "Mon, 29 May 2017 22:06:02 GMT", "X-Served-By": "62cdcc2d03a2f173f1c58590d1a90077", "Access-Control-Allow-Origin": "*", "X-RateLimit-Remaining": "31", "ETag": "\"70c9387afe1eb8fa6c14fd1fb21a34e1\"", "X-GitHub-Media-Type": "github.v3; param=diff", "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload", "Content-Length": "25592", "Last-Modified": "Thu, 28 Jan 2016 21:07:06 GMT", "Status": "200 OK", "X-XSS-Protection": "1; mode=block"}, "url": "https://api.github.com/repos/sigmavirus24/github3.py/commits/51cfbf8cbf98b0ba5006b3490f553bc05d4461e4", "status": {"code": 200, "message": "OK"}}, "recorded_at": "2017-05-29T22:06:02", "request": {"uri": "https://api.github.com/repos/sigmavirus24/github3.py/commits/51cfbf8cbf98b0ba5006b3490f553bc05d4461e4", "body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"Connection": "keep-alive", "Accept-Charset": "utf-8", "Content-Type": "application/json", "User-Agent": "github3.py/1.0.0a4", "Accept": "application/vnd.github.diff", "Accept-Encoding": "gzip, deflate"}}}]}